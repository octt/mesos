#!/bin/sh

# setup (version 0.1)
_version='0.1' ; export _version

################################################################################
# Author: Korben Dorado-Kirscht
#         Instructor - Orange County Technical Trainers
# Date:   December 2015
#
# Purpose:
#
# This secondary script pulls more of the the necessary files from the 
# OCTT downloads repo# and installs additional components for the 
# current class.  OCTT-1101, Automating Ubuntu Linux Installations -
# Jumpstart Workshop
################################################################################

runCommonRole()
{

  clearscreen

  /bin/cat <<_EOD_

  Running the common role.
  
_EOD_

  pause

  cd ${_Repo_Dir}

  ansible-playbook common.yml -i ${_Repo_Dir}/hosts/ -D -bu ${USER}

  pause

  return
}

install_ansible()
{
  cd
  sudo mkdir -p /usr/local/
  cd /usr/local
  /usr/bin/git clone git://github.com/ansible/ansible.git --recursive
  
  . /usr/local/ansible/hacking/env-setup
  sudo easy_install pip
  sudo pip install paramiko PyYAML Jinja2 httplib2 six
  return
}
################################################################################
# Setup the necessary files for ssh communications.
setup_dotssh_dir()
{

  [ -n ${debug-''} ] && /usr/bin/printf "Setup %s ssh directory\n"
  
  if [ ! -d "${_sshdir}" ]
  then
    /usr/bin/printf "\n\nCreating .ssh directory %s\n\n" "${_sshdir}"
    set -x
    /bin/mkdir ${_sshdir}
    chmod 0700 ${_sshdir}
    set +x
  fi
  
  if [ ! -f "${_sshdir}/id_rsa" ]
  then
    /usr/bin/printf "\n\nCreate key %s\n\n" "${_sshdir}/id_rsa"
    set -x
    ssh-keygen -q -N '' -C "Orange County Technical Trainers" \
    -f ${_sshdir}/id_rsa
    set +x
  fi
  
  if [ ! -f "${_sshdir}/authorized_keys" ]
  then
    /usr/bin/printf "\n\nCreate authorized_keys %s\n\n" \
                    "${_sshdir}/authorized_keys"
    [ -n ${debug-''} ] && set -x
    cp ${_sshdir}/id_rsa.pub ${_sshdir}/authorized_keys
    [ -n ${debug-''} ] && set +x
  fi

  if [ ! -f "${_sshdir}/.ssh/config" ]
  then
      /usr/bin/printf "\n\nCreate ssh config file %s\n\n" \
                      "${_sshdir}/config"
    
    /bin/cat <<_EOD_ > ${_sshdir}/config
Host *
    StrictHostKeyChecking no
_EOD_
  fi
  /bin/cat ${_sshdir}/config
  
  install_ansible
  
  return
}






################################################################################
main()
{
  # Setup traps for any unexpected errors.
  set -e
  trap 'abort "A critical failure has occurred."' EXIT

  clearscreen
  
  /usr/bin/printf "\n\nCopyright 2015 - Orange County Technical Trainers\n\n"
  
  pause "setup-2.main"

  /usr/bin/clear ; ${_Repo_Dir}/scripts/setup_keys -i localhost

  # Location of the default SSH directory
  _sshdir="${HOME}/.ssh" ; export _sshdir

  # Call function to setup SSH directory.
  setup_dotssh_dir
  
  pause

  # Validate the .ssh directory.
  [ ! -d ${_sshdir} ] && abort "${_sshdir} missing."
  [ ! -f ${_sshdir}/id_rsa ] && abort "${_sshdir}/id_rsa missing."
  [ ! -f ${_sshdir}/id_rsa.pub ] && abort "${_sshdir}/id_rsa.pub missing."
  [ ! -f ${_sshdir}/authorized_keys ] \
         && abort "${_sshdir}/authorized_keys missing."
  [ ! -f ${_sshdir}/config ] && abort "${_sshdir}/config missing."
  
  pause


  return
}

################################################################################
# Setup stuff prior to calling main().

  /bin/cat > /tmp/sudoers.octt <<_EOD_
# Give root privs to octt
octt  ALL=(ALL) NOPASSWD:ALL
_EOD_

  /usr/bin/sudo /bin/cp /tmp/sudoers.octt /etc/sudoers.d/octt
  /usr/bin/sudo /bin/chown root:root /etc/sudoers.d/octt
  /usr/bin/sudo /bin/chmod 0600 /etc/sudoers.d/octt

  /usr/bin/sudo /usr/bin/apt-get update
  /usr/bin/sudo /usr/bin/apt-get upgrade -y
  /usr/bin/sudo /usr/bin/apt-get install -y ansible

  if [ ! -d ${HOME}/mesos ]
  then
    /usr/bin/printf "No OCTT-Mesos Repository Found at %s\n" \
      "${HOME}/mesos"
    exit 1
  else
    _Repo_Dir="${HOME}/mesos" ; export _Repo_Dir
    cd ${_Repo_Dir}
  fi
  
# Setup the Ansible path.
  if [ -x /usr/local/bin/ansible ]
  then
    _ansibleExec="/usr/local/bin/ansible" ; export _ansibleExec
  fi
  
  if [ -x /usr/local/bin/ansible ]
  then
    _ansibleExec="/usr/bin/ansible" ; export _ansibleExec
  fi
  
  if [ "${_ansibleExec}" == "" ]
  then
    /usr/bin/printf "Ansible is not installed on this system\n"
    exit 1
  fi
  
  . ${_Repo_Dir}/scripts/common_functions
  
  main
  
  pause "setup-2.pre-main"
  
  trap '' EXIT
  exit